# vim: ft=tmux.conf
set-window-option -g mode-keys vi

# swap prefix-key
set-option -g prefix M-b
bind-key M-b send-prefix
unbind-key C-b


# split panes
# bind-key -n M-V split-window -h -c "#{pane_current_path}"
# bind-key -n M-W split-window -v -c "#{pane_current_path}"
# bind-key -n M-V run 'sh -c "tmux split-window -h -c $(pwd)"'
# bind-key -n M-W run 'sh -c "tmux split-window -v -c $(pwd)"'
# bind-key -n M-V run '$HOME/.tmux/splitpane h $$'
# bind-key -n M-W run '$HOME/.tmux/splitpane v $$'
bind-key -n M-V split -h -c "#{pane_current_path}"
bind-key -n M-W split -v -c "#{pane_current_path}"

# alias for prefix-q, display pane inedexes and select pane arbitraly
bind-key -n M-g display-panes

# `onePane.sh` performs the same function 'tmux kill-pane' except only one window & one pane left, and then make last page new
unbind-key w
bind-key M-w run "sh $HOME/.tmux/onePane.sh"

bind-key -n M-Left select-pane -L
bind-key -n M-Down select-pane -D
bind-key -n M-Up select-pane -U
bind-key -n M-Right select-pane -R

unbind-key M-n
bind-key -r M-n swap-pane -U
bind-key -r M-m swap-pane -D

bind-key -n M-t next-layout
bind-key -n M-T previous-layout

bind-key -r M-h resize-pane -L 5
bind-key -r M-l resize-pane -R 5
bind-key -r M-j resize-pane -D 5
bind-key -r M-k resize-pane -U 5
bind-key M-i resize-pane -Z


# window
bind-key M-g new-window
bind-key M-L next-window
bind-key M-H previous-window
bind-key M-d kill-window

# copy and paste
bind-key -n M-y copy-mode
bind-key -r M-p run "reattach-to-user-namespace pbpaste"
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

unbind-key -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

